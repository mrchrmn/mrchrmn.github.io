<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>hrmn.dev</title><link>https://www.hrmn.dev/</link><description>Recent content on hrmn.dev</description><generator>Hugo -- gohugo.io</generator><managingEditor>marc@hrmn.dev (Marc Hermann)</managingEditor><webMaster>marc@hrmn.dev (Marc Hermann)</webMaster><lastBuildDate>Wed, 15 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.hrmn.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>ThrSqr</title><link>https://www.hrmn.dev/post/thrsqr/</link><pubDate>Wed, 15 Sep 2021 00:00:00 +0000</pubDate><author>marc@hrmn.dev (Marc Hermann)</author><guid>https://www.hrmn.dev/post/thrsqr/</guid><description>What started as a quick Node.js/Express exercise turned into a useful web application that can help signifcantly reduce &amp;ldquo;Who&amp;rsquo;s coming?!&amp;rdquo; message group chatter. Stay tuned for production notes.</description></item><item><title>Conslog</title><link>https://www.hrmn.dev/post/conslog/</link><pubDate>Sun, 04 Jul 2021 00:00:00 +0000</pubDate><author>marc@hrmn.dev (Marc Hermann)</author><guid>https://www.hrmn.dev/post/conslog/</guid><description>&lt;p>&lt;em>Conslog is a great time saver for JavaScript learners, making it super easy to add or remove &lt;code>console.log&lt;/code>s to and from selected code.&lt;/em>&lt;/p></description></item><item><title>Microscopic Space</title><link>https://www.hrmn.dev/post/microscopic-space/</link><pubDate>Sat, 31 Oct 2020 00:00:00 +0000</pubDate><author>marc@hrmn.dev (Marc Hermann)</author><guid>https://www.hrmn.dev/post/microscopic-space/</guid><description>The task: fly through a vast network of neuron models and visualize the propagation of &amp;ldquo;signals&amp;rdquo; across the network. My solution: generate the network procedurally, and the rest will follow. Stay tuned for production notes.</description></item><item><title>Berlin Defendr</title><link>https://www.hrmn.dev/post/berlin-defendr/</link><pubDate>Thu, 23 Jan 2020 00:00:00 +0000</pubDate><author>marc@hrmn.dev (Marc Hermann)</author><guid>https://www.hrmn.dev/post/berlin-defendr/</guid><description>&lt;p>&lt;em>The &lt;a href="https://cs50.harvard.edu/x/2020/psets/0/scratch/">problem set 0&lt;/a> of Harvard&amp;rsquo;s CS50x 2020 edition was to create a small application using MIT&amp;rsquo;s graphical programming interface &lt;a href="https://scratch.mit.edu/">Scratch&lt;/a>. I decided to make &lt;a href="https://scratch.mit.edu/projects/361707825/">this tiny (tiny!) game&lt;/a>.&lt;/em>&lt;/p></description></item><item><title>Other things I made</title><link>https://www.hrmn.dev/page/other-things-i-made/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>marc@hrmn.dev (Marc Hermann)</author><guid>https://www.hrmn.dev/page/other-things-i-made/</guid><description>Kicker &amp;amp; Let&amp;rsquo;s Get Married The two that (re)started my journey into animation.
When I wanted to get back into 3D I decided the best way to learn was to make a short film, and so I made Kicker. After the initial idea I read up on film theory, cinematography, editing before actually learning a 3D software, and then started to build the models and animate them. The whole process from idea to finish (ie.</description></item></channel></rss>